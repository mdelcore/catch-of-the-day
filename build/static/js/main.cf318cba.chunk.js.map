{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props$details","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.cf318cba.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n    myInput = React.createRef();\n    static propTypes = {\n        history: PropTypes.object\n    };\n\n    goToStore = event => {\n        // 1. Stop the form from submitting\n        event.preventDefault();\n        // 2. Get the text from that input\n        const storeName = this.myInput.current.value;\n        // 3. Change the page to /store/whatever-they-entered\n        this.props.history.push(`/store/${storeName}`);\n    };\n    render() {\n        return (\n             <form className=\"store-selector\" onSubmit={this.goToStore}>\n             <h2>Please Enter a Store</h2>\n             <input type=\"text\" \n             ref={this.myInput} \n             required placeholder=\"Store Name\" \n             defaultValue={getFunName()} \n             />\n                <button type=\"submit\">Visit Store</button>\n             </form>\n        );\n    }\n}\n\nexport default StorePicker; ","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = props => (\n            <header className=\"top\">\n                <h1>\n                 Catch \n                <span className=\"ofThe\">\n                    <span className=\"of\">of</span>\n                    <span className=\"the\">the</span>\n                </span>\n                Day</h1>\n                <h3 className=\"tagline\">\n                <span>{props.tagline}</span>\n                </h3> \n            </header>\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n};\n\nexport default Header;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func \n  };\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    };\n    // Make sure the fish is loaded before we continue!\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTypes = {\n        addFish: PropTypes.func\n    };\n\n    createFish = event => {\n        //1. Stop form from submitting\n        event.preventDefault();\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value\n        };\n        this.props.addFish(fish);\n        // refresh the form\n        event.currentTarget.reset();\n    };\n    \n    render() {\n        return (\n        <form className=\"fish-edit\" onSubmit={this.createFish}>\n            <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n            <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n            <select name=\"status\" ref={this.statusRef}>\n                <option value=\"available\">Fresh!</option>\n                <option value=\"unavailable\">Sold Out!</option>\n            </select>\n            <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" ></textarea>\n            <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n            <button type=\"submit\">+ Add Fish</button>\n        </form>\n        );\n    }\n}\n\nexport default AddFishForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n    static propTypes = {\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n        }),\n        index: PropTypes.string,\n        updateFish: PropTypes.func\n    };\n\n    handleChange = event => {\n        console.log(event.currentTarget.value);\n        // update that fish\n        // 1. Take a copy of the current fish\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value};\n        this.props.updateFish(this.props.index, updatedFish);\n    };\n\n    render() {\n        return (\n            <div className=\"fish-edit\">\n                <input \n                    type=\"text\" \n                    name=\"name\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.name} \n                />\n                <input \n                    type=\"text\" \n                    name=\"price\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.price} \n                />\n                <select \n                    type=\"text\" \n                    name=\"status\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.status}\n                >\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea \n                    name=\"desc\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.desc} \n                />\n                <input \n                    type=\"text\" \n                    name=\"image\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.image} \n                    />\n                    <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n            </div>\n        );\n    }\n}\n\nexport default EditFishForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory.</p>\n        <button \n            className=\"github\" \n            onClick={() => props.authenticate('Github')}>\n            Log In With GitHub\n        </button>\n        <button \n            className=\"facebook\" \n            onClick={() => props.authenticate('Facebook')}>\n            Log In With Facebook\n        </button>\n    </nav>\n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n        apiKey: \"AIzaSyCtoR0pHJldVvXmBwNOfgg98ibQomuFzY8\",\n        authDomain: \"catch-of-the-day-tripp-delcore.firebaseapp.com\",\n        databaseURL: \"https://catch-of-the-day-tripp-delcore.firebaseio.com\"\n      });\n\n      const base = Rebase.createClass(firebaseApp.database());\n\n      // This is a named export\n      export { firebaseApp };\n\n      //This is a default export\n      export default base;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n    addFish: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    // 1 .Look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    // 2. Claim it if there is no owner\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    // 3. Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"Logging out!\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n\n    // 1. Check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // 2. check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner!</p>\n          {logout}\n        </div>\n      );\n    }\n\n    // 3. They must be the owner, just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n        }),\n        addToOrder: PropTypes.func\n    }\n    \n    render() {\n        const { image, name, price, desc, status } = this.props.details;\n        const isAvailable = status ==='available';\n        return <li className=\"menu-fish\">\n            <img src={image} alt={name} />\n            <h3 className=\"fish-name\">{name}\n                <span className=\"price\">{formatPrice(price)}</span>\n            </h3>\n            <p>{desc}</p>\n            <button \n            disabled ={!isAvailable} onClick={() =>  this.props.addToOrder(this.props.index)}>{isAvailable ? 'Add To Order' : 'Sold Out!'}</button>\n        </li>\n    }\n}\n\nexport default Fish;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {},\n    };\n\n    static propTypes = {\n        match: PropTypes.object\n    };\n\n    componentDidMount() {\n        const { params } = this.props.match;\n        // First reinstate our localstorage\n        const localStorageRef = localStorage.getItem(params.storeId);\n        if(localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) });\n        }\n\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes'\n        });\n    }\n\n    componentDidUpdate() {\n        console.log(this.state.order);\n        localStorage.setItem(\n            this.props.match.params.storeId,\n            JSON.stringify(this.state.order)\n            );\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    addFish = fish => {\n        // 1. Take a copy of existing state\n        const fishes = { ...this.state.fishes };\n        // 2. Add our new fish to that fishes variable \n        fishes[`fish${Date.now()}`] = fish;\n        // 3. Set the new fishes object to state\n        this.setState({ fishes }); \n    };\n    \n    updateFish = (key, updatedFish) => {\n        // 1. Take a copy of the current state\n        const fishes = { ...this.state.fishes };\n        // 2. Update that state\n        fishes[key] = updatedFish;\n        // 3. Set that to state\n        this.setState({ fishes });\n    };\n\n    deleteFish = (key) => {\n        // 1. Take a copy of state\n        const fishes = { ...this.state.fishes };\n        // 2. Update the state\n        fishes[key] = null;\n        // 3. Update state\n        this.setState({ fishes }); \n    };\n\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes });\n    };\n\n    addToOrder = key => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. Either add to the order, or update the number in our order\n        order[key] = order[key] + 1 || 1;\n        // 3. call setState to update our state object \n        this.setState({ order });\n    };\n\n        removeFromOrder = key => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. Either add to the order, or update the number in our order\n        delete order[key];\n        // 3. call setState to update our state object \n        this.setState({ order });\n    };\n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\" />\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => (\n                        <Fish \n                            key={key}\n                            index={key}\n                            details={this.state.fishes[key]} \n                            addToOrder={this.addToOrder} \n                           />\n                        ))}\n                      </ul>\n                </div>\n                 <Order \n                    fishes={this.state.fishes} \n                    order={this.state.order} \n                    removeFromOrder={this.removeFromOrder}\n                 />\n                 <Inventory \n                    addFish={this.addFish} \n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                    storeId={this.props.match.params.storeId}\n                 />\n            </div>\n        );\n    }\n\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>Not Found!!!!</h2>\n    </div>\n);\n\nexport default NotFound;","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\"\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker} />\n            <Route exact path=\"/store/:storeId\" component={App} />\n            <Route exact component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Router;","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\"; \nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#main\"));"],"sourceRoot":""}